. ~/.sens

[[ -s ~/tools/z/z.sh ]] && source ~/tools/z/z.sh

if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
fi

md() {
	mkdir -p "$@" && cd "$@";
}

untar() {
	tar -zxvf $1
}

killPort() {
	if [ -z "$1" ]; then
		echo "Usage: searchAndDestroy [numeric port identifier]" >&2
		return 1
	fi
	lsof -i TCP:$1 | awk '/LISTEN/{print $2}' | xargs kill -9
}

cs () {
	if [ "$1" = "" ]; then
		echo "Please supply a commit message"
		return 0
	fi

	branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
	msg=""

	for arg in "$@"
	do
		msg+=" $arg"
	done

	if [ "$branch" != "master" ]; then
		git commit -m "[$branch]$msg"
	fi
}

pnb() {
	branch=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)

	git push -u origin $branch
}

alias s="git status"
alias co="git checkout"
alias p="git pull"
alias d="git diff"
alias dw="git diff --color-words --word-diff-regex='\\w+|[^[:space:]]'"
alias dc="d --cached"
alias dwc="dw --cached"
alias a="git add ."
alias ad="git add"
alias c="git commit -m"
alias b="git branch"
alias gfo="git fetch origin"
alias lg="git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative"
alias sp="git show -p"
alias gm="git merge"
alias ri="git rebase -i"
alias com="git checkout master"
alias clearAllBranches="git branch --merged | grep -v \* | xargs git branch -D"

alias gbd="grunt build-dev"
alias ..="cd .."
alias who="git shortlog -s --"
alias gt="grunt test"
alias nt="npm test"
alias wt="npm run watch-tests"
alias rw="npm run watch"
alias ns="npm start"
alias nl="npm run lint"

alias su="sublime ."

alias bp="~/.git-pull"
alias bs="~/.git-status"

export NVM_DIR="/Users/tomrw/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

export PATH="./node_modules/.bin:$PATH"
