#!/bin/bash

. ~/.sens
. ~/dotfiles/scripts/apple.sh
. ~/dotfiles/scripts/bash.sh
. ~/dotfiles/scripts/docker.sh
. ~/dotfiles/scripts/git.sh
. ~/dotfiles/scripts/npm-completion.sh
. ~/dotfiles/scripts/npm.sh
. ~/dotfiles/scripts/yarn.sh
. ~/dotfiles/scripts/k8s.sh

killPort() {
	if [ -z "$1" ]; then
		echo "Usage: searchAndDestroy [numeric port identifier]" >&2
		return 1
	fi
	lsof -i TCP:$1 | awk '/LISTEN/{print $2}' | xargs kill -9
}

dnv() {
	nvm alias default $1
}

batchExec() {
	local args=""

	for arg in "$@"
	do
		args+=" $arg"
	done

	find . -maxdepth 1 -type d \( ! -name . \) -exec bash -c "cd '{}' && pwd && $args" \;
}

use() {
	local branch=${1:-master}
	local previousDir=$(pwd)

	git fetch origin
	git checkout $branch

	if [ $branch = 'master' ] && [ $(which hub) ]; then
		hub sync
	fi

	if [[ ! `git status --porcelain` ]]; then
		git pull
		git reset --hard origin/$branch
	fi

	if [ $(basename $(dirname $(pwd))) = 'packages' ] && [ -f ../../lerna.json ]; then
		cd ../../
	fi

	if [ -f .nvmrc ]; then
		nvm install $(cat .nvmrc)
	fi

	if [ -f package.json ]; then
		yarn
	fi

	if [ -f lerna.json ] && [ $(which lerna) ]; then
		lerna bootstrap
	fi

	cd $previousDir
}

set -o vi

export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"

export PATH="./node_modules/.bin:$PATH"

export GITAWAREPROMPT=~/dotfiles/plugins/git-aware-prompt
source "${GITAWAREPROMPT}/main.sh"

[[ -s ~/dotfiles/plugins/z/z.sh ]] && source ~/dotfiles/plugins/z/z.sh

export PS1="\u@\h \W \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\$ "

export NVM_DIR="$HOME/.nvm"
  [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
  [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

# The next line updates PATH for the Google Cloud SDK.
if [ -f ~/google-cloud-sdk/path.bash.inc ]; then . ~/google-cloud-sdk/path.bash.inc; fi

# The next line enables shell command completion for gcloud.
if [ -f ~/google-cloud-sdk/completion.bash.inc ]; then . ~/google-cloud-sdk/completion.bash.inc; fi

eval "$(pipenv --completion)"

export HISTSIZE=50000
export HISTFILESIZE=50000
export HISTCONTROL=ignoredups:erasedups
shopt -s histappend
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"

_codeComplete()
{
    local cur=${COMP_WORDS[COMP_CWORD]}

    COMPREPLY=( $(compgen -W "$(ls ~/workspace/; ls ~/workspace/**/packages)" -- $cur) )
}
